# Drainer configuration for processing Redis streams to PostgreSQL
# This service handles draining raw SQL queries from Redis streams to the SQL database
[drainer]
stream_name = "{{ .Values.drainer.config.stream_name }}"
num_partitions = {{ .Values.drainer.config.num_partitions }}
max_read_count = {{ .Values.drainer.config.max_read_count }}
shutdown_interval = {{ .Values.drainer.config.shutdown_interval }}
loop_interval = {{ .Values.drainer.config.loop_interval }}

# Secrets manager client to be used
{{- toToml (dict "secrets_management" .Values.server.configs.secrets_management) | nindent 0 }}

# Encryption manager client to be used
{{- toToml (dict "encryption_management" .Values.server.configs.encryption_management) | nindent 0 }}

{{- toToml (dict "multitenancy" .Values.server.configs.multitenancy) | nindent 0 }}

[log.console]
enabled = {{ .Values.server.configs.log.console.enabled }}
level = "{{ .Values.server.configs.log.console.level }}"
log_format = "{{ .Values.server.configs.log.console.log_format }}"

[log.file]
enabled = {{ .Values.server.configs.log.file.enabled }}
level = "{{ .Values.server.configs.log.file.level }}"
log_format = "{{ .Values.server.configs.log.file.log_format }}"

[log.telemetry]
metrics_enabled = {{ .Values.server.configs.log.telemetry.metrics_enabled }}
otel_exporter_otlp_endpoint = {{ include "opentelemetry-collector.url" . | quote }}
