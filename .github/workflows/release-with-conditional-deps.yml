name: Release Charts (Conditional Dependencies)

on:
  workflow_dispatch:

permissions: {}

jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Add helm repos
        run: |
          helm repo add hyperswitch https://juspay.github.io/hyperswitch-helm
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo add vector https://helm.vector.dev
          helm repo add codecentric https://codecentric.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add istio https://istio-release.storage.googleapis.com/charts
          helm repo update

      # KEY STEP: Build dependencies using LOCAL file:// references
      # This allows charts to reference each other locally during build
      - name: Build Helm Dependencies (with local references)
        run: |
          echo "Building dependencies using local file:// references..."
          for chart in charts/incubator/*; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename "$chart")
              echo "→ Updating dependencies for ${chart_name}..."
              helm dependency update "$chart" || {
                echo "Warning: Failed to update dependencies for ${chart_name}"
                exit 1
              }
            fi
          done

      # KEY STEP: Rewrite file:// to https:// for charts with local dependencies
      # This ensures published charts reference the remote Helm repository
      - name: Rewrite local dependencies to remote repository
        run: |
          echo "Rewriting file:// dependencies to https:// for publishing..."

          # List of charts that have local hyperswitch chart dependencies
          charts_to_rewrite=("hyperswitch-stack")

          for chart_name in "${charts_to_rewrite[@]}"; do
            chart_path="charts/incubator/${chart_name}"
            if [ -f "${chart_path}/Chart.yaml" ]; then
              echo "→ Rewriting dependencies for ${chart_name}..."

              # Backup original
              cp "${chart_path}/Chart.yaml" "${chart_path}/Chart.yaml.backup"

              # Rewrite file:// references to https:// for hyperswitch charts
              yq eval '
                (.dependencies[] |
                  select(.repository | test("^file://.*/(hyperswitch-.*)$")) |
                  .repository
                ) = "https://juspay.github.io/hyperswitch-helm"
              ' -i "${chart_path}/Chart.yaml"

              echo "  ✓ Dependencies rewritten"
              echo "  Changes:"
              diff "${chart_path}/Chart.yaml.backup" "${chart_path}/Chart.yaml" || true
            fi
          done

      # Now the charts are ready: dependencies built locally, Chart.yaml points to remote repo
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts/incubator
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: "true"

      # Restore original Chart.yaml files (optional, for clarity)
      - name: Restore original Chart.yaml files
        if: always()
        run: |
          for backup in charts/incubator/*/Chart.yaml.backup; do
            if [ -f "$backup" ]; then
              original="${backup%.backup}"
              echo "Restoring $original"
              mv "$backup" "$original"
            fi
          done

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            REPO_NAME=${{ github.event.repository.name }}
            helm push "${pkg}" "oci://ghcr.io/${REPO_OWNER}/${REPO_NAME}"
          done
